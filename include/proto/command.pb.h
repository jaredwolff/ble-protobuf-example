/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_PROTO_COMMAND_PB_H_INCLUDED
#define PB_PROTO_COMMAND_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _event_event_type {
    event_event_type_command = 0,
    event_event_type_response = 1
} event_event_type;
#define _event_event_type_MIN event_event_type_command
#define _event_event_type_MAX event_event_type_response
#define _event_event_type_ARRAYSIZE ((event_event_type)(event_event_type_response+1))

/* Struct definitions */
typedef struct _event {
    event_event_type type;
    pb_callback_t message;
/* @@protoc_insertion_point(struct:event) */
} event;


/* Initializer values for message structs */
#define event_init_default                       {_event_event_type_MIN, {{NULL}, NULL}}
#define event_init_zero                          {_event_event_type_MIN, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define event_type_tag                           1
#define event_message_tag                        2

/* Struct field encoding specification for nanopb */
#define event_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, UENUM, type, 1) \
X(a, CALLBACK, SINGULAR, STRING, message, 2)
#define event_CALLBACK pb_default_field_callback
#define event_DEFAULT NULL

extern const pb_msgdesc_t event_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define event_fields &event_msg

/* Maximum encoded size of messages (where known) */
/* event_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
